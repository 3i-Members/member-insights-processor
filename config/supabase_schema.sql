-- Member Insights Processor - Supabase Schema
-- Table: elvis__structured_insights
-- Purpose: Store structured member insights with metadata and full JSON content

-- Drop table if exists (for development only)
-- DROP TABLE IF EXISTS elvis__structured_insights;

-- Create the structured insights table
CREATE TABLE IF NOT EXISTS elvis__structured_insights (
    -- Primary identifier
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    
    -- Core identifiers
    contact_id VARCHAR(50) NOT NULL,
    eni_id VARCHAR(100),
    
    -- Member information
    member_name VARCHAR(255),
    
    -- ENI metadata
    eni_source_type VARCHAR(100),
    eni_source_subtype VARCHAR(100),
    eni_source_types TEXT[], -- Array for combined insights
    eni_source_subtypes TEXT[], -- Array for combined insights
    
    -- Processing metadata
    generator VARCHAR(50) NOT NULL DEFAULT 'structured_insight',
    system_prompt_key VARCHAR(100),
    context_files TEXT,
    record_count INTEGER DEFAULT 1,
    total_eni_ids INTEGER DEFAULT 1,
    
    -- Insight content (structured JSON)
    insights JSONB NOT NULL,
    
    -- Individual insight sections (extracted for easier querying)
    personal TEXT,
    business TEXT,
    investing TEXT,
    three_i TEXT, -- "3i" field (can't use number as column name)
    deals TEXT,
    introductions TEXT,
    
    -- Timestamps
    generated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    
    -- Processing status
    processing_status VARCHAR(50) DEFAULT 'completed',
    
    -- Version tracking
    version INTEGER DEFAULT 1,
    
    -- Additional metadata as JSON
    additional_metadata JSONB,
    
    -- Constraints
    CONSTRAINT unique_contact_eni UNIQUE(contact_id, eni_id),
    CONSTRAINT valid_processing_status CHECK (processing_status IN ('pending', 'processing', 'completed', 'failed', 'archived'))
);

-- Create indexes for efficient querying
CREATE INDEX IF NOT EXISTS idx_structured_insights_contact_id ON elvis__structured_insights(contact_id);
CREATE INDEX IF NOT EXISTS idx_structured_insights_eni_id ON elvis__structured_insights(eni_id);
CREATE INDEX IF NOT EXISTS idx_structured_insights_member_name ON elvis__structured_insights(member_name);
CREATE INDEX IF NOT EXISTS idx_structured_insights_generated_at ON elvis__structured_insights(generated_at);
CREATE INDEX IF NOT EXISTS idx_structured_insights_updated_at ON elvis__structured_insights(updated_at);
CREATE INDEX IF NOT EXISTS idx_structured_insights_eni_source_type ON elvis__structured_insights(eni_source_type);
CREATE INDEX IF NOT EXISTS idx_structured_insights_processing_status ON elvis__structured_insights(processing_status);

-- Create GIN index for JSONB insights column for efficient JSON queries
CREATE INDEX IF NOT EXISTS idx_structured_insights_insights_gin ON elvis__structured_insights USING GIN(insights);

-- Create trigger to automatically update the updated_at timestamp
CREATE OR REPLACE FUNCTION update_structured_insights_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_structured_insights_updated_at
    BEFORE UPDATE ON elvis__structured_insights
    FOR EACH ROW
    EXECUTE FUNCTION update_structured_insights_updated_at();

-- Add RLS (Row Level Security) policies if needed
-- ALTER TABLE elvis__structured_insights ENABLE ROW LEVEL SECURITY;

-- Example policy for authenticated users (adjust as needed)
-- CREATE POLICY "Allow authenticated read access" ON elvis__structured_insights
--     FOR SELECT USING (auth.role() = 'authenticated');

-- CREATE POLICY "Allow authenticated write access" ON elvis__structured_insights
--     FOR ALL USING (auth.role() = 'authenticated');

-- Add comments for documentation
COMMENT ON TABLE elvis__structured_insights IS 'Stores structured member insights generated by AI processing with full metadata and JSON content';
COMMENT ON COLUMN elvis__structured_insights.contact_id IS 'Primary contact identifier from source system';
COMMENT ON COLUMN elvis__structured_insights.eni_id IS 'ENI (Entity) identifier, can be combined for multiple ENIs';
COMMENT ON COLUMN elvis__structured_insights.insights IS 'Full structured insight JSON containing personal, business, investing, 3i, deals, and introductions';
COMMENT ON COLUMN elvis__structured_insights.eni_source_types IS 'Array of source types for combined insights';
COMMENT ON COLUMN elvis__structured_insights.eni_source_subtypes IS 'Array of source subtypes for combined insights';
COMMENT ON COLUMN elvis__structured_insights.version IS 'Version number for tracking insight updates'; 