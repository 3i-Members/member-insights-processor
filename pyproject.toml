[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "member-insights-processor"
version = "1.0.0"
description = "AI-powered member insights processor with BigQuery, Supabase, and multi-LLM support"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "3i Members", email = "tech@3imembers.com"}
]
keywords = ["ai", "llm", "bigquery", "supabase", "insights", "processing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    # Core Dependencies
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "python-dateutil>=2.8.2",
    # Google Cloud & BigQuery
    "google-cloud-bigquery>=3.10.0",
    "google-cloud-storage>=2.16.0",
    "google-auth>=2.17.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.1.0",
    "db-dtypes>=1.0.0",
    # AI Processing
    "google-generativeai>=0.3.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    # Database Integration
    "supabase>=2.0.0",
    "postgrest>=0.10.6",
    "websockets>=13.0",
    # Airtable Integration
    "pyairtable>=2.1.0",
    # Configuration & Data Formats
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
    # File Processing & I/O
    "pathlib2>=2.3.7",
    "chardet>=5.1.0",
    # Logging & Monitoring
    "colorlog>=6.7.0",
    # Performance
    "psutil>=5.9.0",
    "tqdm>=4.65.0",
    # Data Validation
    "pydantic>=2.0.0",
    "jsonschema>=4.17.0",
    # Security
    "cryptography>=41.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.urls]
Homepage = "https://github.com/3i-Members/member-insights-processor"
Documentation = "https://github.com/3i-Members/member-insights-processor#readme"
Repository = "https://github.com/3i-Members/member-insights-processor"
Issues = "https://github.com/3i-Members/member-insights-processor/issues"

[project.scripts]
member-insights = "src.main:main"

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 100
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    "venv",
    ".venv",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "google.cloud.*",
    "google.auth.*",
    "anthropic.*",
    "openai.*",
    "supabase.*",
    "pyairtable.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
